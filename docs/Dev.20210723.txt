
getting funner...

88305664, 'Instances': [], 'Parents': []}], 'LabelModelVersion': '2.0'}
<class 'dict'>
{'Name': 'Tree', 'Confidence': 90.44393920898438, 'Instances': [], 'Parents': [{'Name': 'Plant'}]}
{'Name': 'Plant', 'Confidence': 90.44393920898438, 'Instances': [], 'Parents': []}
{'Name': 'Urban', 'Confidence': 85.79068756103516, 'Instances': [], 'Parents': []}
{'Name': 'Building', 'Confidence': 74.22905731201172, 'Instances': [], 'Parents': []}
{'Name': 'Flagstone', 'Confidence': 72.1240005493164, 'Instances': [], 'Parents': []}
{'Name': 'Vegetation', 'Confidence': 71.17005920410156, 'Instances': [], 'Parents': [{'Name': 'Plant'}]}
{'Name': 'Garage', 'Confidence': 66.02606964111328, 'Instances': [], 'Parents': []}
{'Name': 'Housing', 'Confidence': 65.3967056274414, 'Instances': [], 'Parents': [{'Name': 'Building'}]}
{'Name': 'Tarmac', 'Confidence': 64.69490814208984, 'Instances': [], 'Parents': []}
{'Name': 'Asphalt', 'Confidence': 64.69490814208984, 'Instances': [], 'Parents': []}
{'Name': 'Home Decor', 'Confidence': 62.33171081542969, 'Instances': [], 'Parents': []}
{'Name': 'Walkway', 'Confidence': 58.68953323364258, 'Instances': [], 'Parents': [{'Name': 'Path'}]}
{'Name': 'Path', 'Confidence': 58.68953323364258, 'Instances': [], 'Parents': []}
{'Name': 'Suburb', 'Confidence': 57.164859771728516, 'Instances': [], 'Parents': [{'Name': 'Urban'}, {'Name': 'Building'}]}
{'Name': 'Bush', 'Confidence': 56.60989761352539, 'Instances': [], 'Parents': [{'Name': 'Vegetation'}, {'Name': 'Plant'}]}
{'Name': 'Slate', 'Confidence': 56.16239547729492, 'Instances': [], 'Parents': []}
{'Name': 'Concrete', 'Confidence': 55.33432388305664, 'Instances': [], 'Parents': []}
[]
127.0.0.1 - - [23/Jul/2021 16:15:07] "GET /s3/ninfo-property-images/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg?rekognition=words HTTP/1.1" 200 -






blam.  ok.  we just want the key words...  Tree, Plant, Urban, Building, ...

ðŸ§¨ karl.rink@Karl-MacBook-Pro image_labeler % curl "http://127.0.0.1:8880/s3/ninfo-property-images/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg?tags=rekognition"
{
    "Labels": [
        {
            "Name": "Tree",
            "Confidence": 90.44393920898438,
            "Instances": [],
            "Parents": [
                {
                    "Name": "Plant"
                }
            ]
        },
        {
            "Name": "Plant",
            "Confidence": 90.44393920898438,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Urban",
            "Confidence": 85.79068756103516,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Building",
            "Confidence": 74.22905731201172,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Flagstone",
            "Confidence": 72.1240005493164,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Vegetation",
            "Confidence": 71.17005920410156,
            "Instances": [],
            "Parents": [
                {
                    "Name": "Plant"
                }
            ]
        },
        {
            "Name": "Garage",
            "Confidence": 66.02606964111328,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Housing",
            "Confidence": 65.3967056274414,
            "Instances": [],
            "Parents": [
                {
                    "Name": "Building"
                }
            ]
        },
        {
            "Name": "Tarmac",
            "Confidence": 64.69490814208984,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Asphalt",
            "Confidence": 64.69490814208984,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Home Decor",
            "Confidence": 62.33171081542969,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Walkway",
            "Confidence": 58.68953323364258,
            "Instances": [],
            "Parents": [
                {
                    "Name": "Path"
                }
            ]
        },
        {
            "Name": "Path",
            "Confidence": 58.68953323364258,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Suburb",
            "Confidence": 57.164859771728516,
            "Instances": [],
            "Parents": [
                {
                    "Name": "Urban"
                },
                {
                    "Name": "Building"
                }
            ]
        },
        {
            "Name": "Bush",
            "Confidence": 56.60989761352539,
            "Instances": [],
            "Parents": [
                {
                    "Name": "Vegetation"
                },
                {
                    "Name": "Plant"
                }
            ]
        },
        {
            "Name": "Slate",
            "Confidence": 56.16239547729492,
            "Instances": [],
            "Parents": []
        },
        {
            "Name": "Concrete",
            "Confidence": 55.33432388305664,
            "Instances": [],
            "Parents": []
        }
    ],
    "LabelModelVersion": "2.0"
}




spaces or tabs for u?

---




fire in the hole, !working!


ðŸ§¨ karl.rink@Karl-MacBook-Pro t % cat tp1       

curl -X PUT \
     -H "Content-Type: application/json" \
     -d '{"labler":"karl.rink@nationsinfocorp.com","image_url":"https://ninfo-property-images.s3.us-west-2.amazonaws.com/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg"}' \
     http://127.0.0.1:8880/s3/ninfo-property-images/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg    




ðŸ§¨ karl.rink@Karl-MacBook-Pro t % bash tp1      
{
  "errorMessage": "An error occurred (InvalidTag) when calling the PutObjectTagging operation: Cannot provide multiple Tags with the same key", 
  "errorType": "Exception", 
  "status": 599
}

 * Running on http://127.0.0.1:8880/ (Press CTRL+C to quit)
{'labler': 'karl.rink@nationsinfocorp.com', 'image_url': 'https://ninfo-property-images.s3.us-west-2.amazonaws.com/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg'}
{'TagSet': [{'Key': 'image_url', 'Value': 'https://ninfo-property-images.s3.us-west-2.amazonaws.com/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg'}, {'Key': 'image_url', 'Value': 'https://ninfo-property-images.s3.us-west-2.amazonaws.com/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg'}]}


ðŸ§¨ karl.rink@Karl-MacBook-Pro t % bash tp1
{
  "message": "OK", 
  "method": "PUT", 
  "name": "2eece964b6f902124052810e5a92d6f9ca715c1b.jpg", 
  "status": 200
}
ðŸ§¨ karl.rink@Karl-MacBook-Pro t % 




return all in json please

ðŸ§¨ karl.rink@Karl-MacBook-Pro t % cat tp1 

curl -X PUT \
     -H "Content-Type: application/json" \
     -d '{"labler":"karl.rink@nationsinfocorp.com","image_url":"https://ninfo-property-images.s3.us-west-2.amazonaws.com/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg"}' \
     http://127.0.0.1:8880/s3/ninfo-property-images/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg    


ðŸ§¨ karl.rink@Karl-MacBook-Pro t % bash tp1 
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>405 Method Not Allowed</title>
<h1>Method Not Allowed</h1>
<p>The method is not allowed for the requested URL.</p>
ðŸ§¨ karl.rink@Karl-MacBook-Pro t %





put replaces entire tag set

#https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.put_object_tagging

put_object_tagging(**kwargs)

ðŸ§¨ karl.rink@Karl-MacBook-Pro ~ % curl "http://127.0.0.1:8880/s3/ninfo-property-images/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg?tags=s3"
{
  "labeler": "karl.rink@nationsinfocorp.com", 
  "rekognition_json_location": "rekognition/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg.json", 
  "type": "jpg"
}


ðŸ§¨ karl.rink@Karl-MacBook-Pro t % ./bototag.py ninfo-property-images 2eece964b6f902124052810e5a92d6f9ca715c1b.jpg labeler 'karl.rink'

put_tags_response = s3_client.put_object_tagging(
    Bucket=s3bucket,
    Key=s3object,
    Tagging={
        'TagSet': [
            {
                'Key': 'labeler',
                'Value': 'karl.rink'
            },
        ]
    }
)




curl "http://127.0.0.1:8880/s3/ninfo-property-images/2eece964b6f902124052810e5a92d6f9ca715c1b.jpg?tags=s3"
{
  "labeler": "karl.rink"
}





https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.put_object_tagging


For tagging-related restrictions related to characters and encodings, see Tag Restrictions . Note that Amazon S3 limits the maximum number of tags to 10 tags per object.


https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html


response = client.put_object_tagging(
    Bucket='string',
    Key='string',
    VersionId='string',
    ContentMD5='string',
    Tagging={
        'TagSet': [
            {
                'Key': 'string',
                'Value': 'string'
            },
        ]
    },
    ExpectedBucketOwner='string',
    RequestPayer='requester'
)






