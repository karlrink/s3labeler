<!DOCTYPE html>
<html>

<head>
  <title></title>

  <meta charset="utf-8">

</head>

<body onload="loadContent()"> 
    <noscript>Please Enable JavaScript</noscript>

<div class="container"></div>

<script type="text/javascript">

function loadContent() {

  params = new URLSearchParams(window.location.search);

  //for (param of params) {
  //  console.log(param)
  //}
  console.log('load body ' + params.toString());

  if (!params.toString()) {

      console.log('yes, keys');
      for (param of params) {
        console.log('param '+ param);
      }

      renderBuckets();
      //new_location = renderBuckets();
      //console.log('new.location ' +new_location);
      //location.replace();

  }

  if (params.has('view')) {
      view = params.get('view');
      //console.log('view is ' + view);

      if (view == 'buckets') {
          //renderBuckets();
      }
  }

  if (params.has('bucket')) {
      bucket = params.get('bucket');
      //console.log('view is ' + view);

      if (bucket == 'buckets') {
          value = params.get('bucket');
          //renderBucketFiles(value);
      }
  }

}


async function getBuckets_v1() {
    let url = 'http://127.0.0.1:8880/s3/';
    try {
        let res = await fetch(url, {mode:'cors'});
        return await res.json();
    } catch (error) {
        console.log(error);
    }
}

async function renderBuckets_v1() {
    let buckets = await getBuckets();
    let html = '';
    buckets.forEach(bucket => {
        //console.log(bucket)
        //let htmlSegment = `<div class=""> <a href="http://127.0.0.1:8880/s3/${bucket}/">${bucket}</a> </div>`;
        let htmlSegment = `<div class=""> <button onclick="renderBucketFiles('${bucket}')">${bucket}</button> </div>`;

        html += htmlSegment;
    });

    let container = document.querySelector('.container');
    container.innerHTML = html;
}

async function renderBuckets() {

    let url = 'http://127.0.0.1:8880/s3/';

    let html = '';

    try {
        let response = await fetch(url, {mode:'cors'});
        let buckets = await response.json();
        buckets.forEach(bucket => {
        let htmlSegment = `<div class=""> <button onclick="renderBucketFiles('${bucket}')">${bucket}</button> </div>`;

        html += htmlSegment;
    });
    } catch (error) {
        html += error;
    }

    let container = document.querySelector('.container');
    container.innerHTML = html;

    //history.pushState({page: 1}, "title 1", "?page=1");
    history.pushState({view: 'buckets'}, "buckets", "?view=buckets");
}


async function getBucketFiles(bucket) {
    let url = 'http://127.0.0.1:8880/s3/' + bucket + '/';
    try {
        let res = await fetch(url, {mode:'cors'});
        return await res.json();
    } catch (error) {
        console.log(error);
    }
}

async function renderBucketFiles(bucket) {

    let files = await getBucketFiles(bucket);
    let html = '';
    files.forEach(file => {
        //let htmlSegment = `<div class=""> <a href="http://127.0.0.1:8880/s3/${bucket}/${file}">${bucket}/${file}</a> </div>`;
        let htmlSegment = `<div class=""> <button onclick="renderFileLabels('${bucket}','${file}')">${bucket}/${file}</button> </div>`;

        html += htmlSegment;
    });

    let container = document.querySelector('.container');
    container.innerHTML = html;

    //history.pushState({page: 2}, "title 2", "?page=2");
    history.pushState({view: bucket}, bucket, "?bucket="+bucket);
}


async function getFileLabels(bucket, file) {

    let url = 'http://127.0.0.1:8880/s3/' + bucket + '/' + file;
    try {
        let res = await fetch(url, {mode:'cors'});
        return await res.json();
    } catch (error) {
        console.log(error);
        //return error
    }
}

async function renderFileLabels(bucket, file) {

    let labels = await getFileLabels(bucket, file);

    let html = '';
    //let html = '<div>' + bucket +  '/' + file + '</div>';
    //let html = bucket +  '/' + file;

    for (const [key, value] of Object.entries(labels)) {
      //console.log(`${key}: ${value}`);
      let htmlSegment = `<div class=""> <p>${key} : ${value}</p> </div>`;
      html += htmlSegment;
    }

    let container = document.querySelector('.container');
    container.innerHTML = html;

    //history.pushState({page: 3}, "title 3", "?page=3");
    history.pushState({view: bucket+'/'+file}, bucket+'/'+file, "?bucket="+bucket+"&file="+file);
}

/*
const params = new URLSearchParams(window.location.search)
for (const param of params) {
  console.log(param)
}
*/

/*
function goBack() {
  window.history.back();
}
*/

/*
window.onpopstate = function(event) {
  alert(`location: ${document.location}, state: ${JSON.stringify(event.state)}`);
}
*/

window.addEventListener('popstate', function(event) {
    //alert("location: " + document.location + ", state: " + JSON.stringify(event.state));
    console.log("location: " + document.location + ", state: " + JSON.stringify(event.state));


params = new URLSearchParams(window.location.search);

for (param of params) {
  console.log(param)
}

    var location = document.location;
    location.reload(true);


});



//renderBuckets();
//renderBucketFiles('bucket_name');
//renderFileLabels('ninfo', 'test.txt');


</script>

</body>

</html>
